name: Package the code
run-name: ${{ github.actor }} running package
on: 
  push: 
    branches: 
      - master

env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  DGO_TOKEN: ${{secrets.DGO_TOKEN}}
  TF_TOKEN_app_terraform_io: ${{secrets.TF_TOKEN_app_terraform_io}}

jobs:
  Build-And-Test:
    uses: ./.github/workflows/test.yaml
  PAckage:
    needs: Build-And-Test
    runs-on: ubuntu-latest
    steps:
      - run: echo "ðŸ”Ž The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Build
        run: |
          cd app
          go build
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          docker build -t tlitovsk/clearpoint-sample:${GITHUB_SHA} .
          docker push tlitovsk/clearpoint-sample:${GITHUB_SHA}
  Deploy-To_infra:
    runs-on: ubuntu-latest
    needs: Package
    steps:
        - uses: actions/checkout@v3
        - uses: webfactory/ssh-agent@v0.7.0
          with:
              ssh-private-key: ${{ secrets.CLEARPOINT_PRV }}

        - name: Install pipenv
          run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
        - run: pipenv install

        - uses: actions/setup-node@v1
          with:
            node-version: "16"

        - name: Generate module and provider bindings
          run: |
            cd deploy 
            npx cdktf-cli@0.16.1 get python
            pipenv install 

        - name: Run Terraform CDK
          uses: hashicorp/terraform-cdk-action@v0.1.0
          with:
            workingDirectory: ./deploy
            terraformVersion: 1.5.3
            cdktfVersion: 0.16.1
            stackName: my-stack
            mode: auto-approve-apply
            terraformCloudToken: ${{ secrets.TF_TOKEN_app_terraform_io }}

      
